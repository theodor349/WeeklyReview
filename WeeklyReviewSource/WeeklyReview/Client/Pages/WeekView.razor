@page "/weekview"
@using System.Globalization;

<PageTitle>Week View</PageTitle>
<div class="container-fluid">
    <SfSchedule TValue="ScheduleViewModel" Width="100%" Height="calc(100vh - 4.6rem)" @bind-SelectedDate="@ViewDate"
                EnableAutoRowHeight="true"
                AllowMultiCellSelection="false" AllowMultiRowSelection="false" AllowDragAndDrop="false" AllowResizing="false"
                DateFormat="yyyy-MM-dd" TimeFormat="HH:mm" StartHour="00:00" FirstDayOfWeek="1" ShowWeekNumber="true">
        <ScheduleTimeScale Interval="60" SlotCount="4"></ScheduleTimeScale>
        <ScheduleTemplates>
            <DateHeaderTemplate>
                <div class="date-text">@(getDateHeaderText((context as TemplateContext).Date))</div>
            </DateHeaderTemplate>
        </ScheduleTemplates>
        <ScheduleResources>
            <ScheduleResource TItem="CategoryViewModel" TValue="int" DataSource="@Categories" Field="CategoryId" IdField="Id" ColorField="Color"></ScheduleResource>
        </ScheduleResources>
        <ScheduleEventSettings DataSource="@DataSource" IgnoreWhitespace="true">
        </ScheduleEventSettings>
        <ScheduleViews>
            <ScheduleView Option="View.Day"></ScheduleView>
            <ScheduleView Option="View.Week"></ScheduleView>
            <ScheduleView Option="View.WorkWeek"></ScheduleView>
            <ScheduleView Option="View.Month"></ScheduleView>
            <ScheduleView Option="View.Agenda"></ScheduleView>
        </ScheduleViews>
    </SfSchedule>
</div>

@code{

    public static string getDateHeaderText(DateTime date)
    {
        return date.ToString("dd dddd", CultureInfo.CurrentCulture);
    }

    public void Add15Minutes() => InputDate = InputDate.AddMinutes(15);
    public void Sub15Minutes() => InputDate = InputDate.AddMinutes(-15);
    public void ResetTime()
    {
        InputDate = DateTime.Now;
        TimeUpdated();
    }
    public void GoToView() => ViewDate = InputDate;
    private void OnDateChange(ChangedEventArgs<DateTime> args)
    {
        InputDate = args.Value;
        TimeUpdated();
        StateHasChanged();
    }
}