// <auto-generated />
using System;
using Functions.Persitance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;


#nullable disable

namespace Functions.Migrations;

[DbContext(typeof(WeeklyReviewApiDbContext))]
[Migration("20231019211407_LongerActivityName")]
partial class LongerActivityName
{
    /// <inheritdoc />
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", "7.0.11")
            .HasAnnotation("Relational:MaxIdentifierLength", 128);

        SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

        modelBuilder.Entity("ActivityModelEntryModel", b =>
            {
                b.Property<int>("ActivitiesId")
                    .HasColumnType("int");

                b.Property<int>("EntryModelId")
                    .HasColumnType("int");

                b.HasKey("ActivitiesId", "EntryModelId");

                b.HasIndex("EntryModelId");

                b.ToTable("ActivityModelEntryModel");
            });

        modelBuilder.Entity("database.Models.ActivityChangeModel", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<DateTime>("ChangeDate")
                    .HasColumnType("datetime2");

                b.Property<int>("DestinationId")
                    .HasColumnType("int");

                b.Property<int>("SourceId")
                    .HasColumnType("int");

                b.Property<Guid>("UserGuid")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("Id");

                b.HasIndex("DestinationId");

                b.HasIndex("SourceId");

                b.ToTable("ActivityChange");
            });

        modelBuilder.Entity("database.Models.ActivityModel", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<int>("CategoryId")
                    .HasColumnType("int");

                b.Property<bool>("Deleted")
                    .HasColumnType("bit");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasColumnType("nvarchar(128)");

                b.Property<string>("NormalizedName")
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasColumnType("nvarchar(128)");

                b.Property<Guid>("UserGuid")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("Id");

                b.HasIndex("CategoryId");

                b.HasIndex("UserGuid", "NormalizedName")
                    .IsUnique();

                b.ToTable("Activity");
            });

        modelBuilder.Entity("database.Models.CategoryModel", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<int>("Color")
                    .HasColumnType("int");

                b.Property<bool>("Deleted")
                    .HasColumnType("bit");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(64)
                    .HasColumnType("nvarchar(64)");

                b.Property<string>("NormalizedName")
                    .IsRequired()
                    .HasMaxLength(64)
                    .HasColumnType("nvarchar(64)");

                b.Property<int>("Priority")
                    .HasColumnType("int");

                b.Property<Guid>("UserGuid")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("Id");

                b.HasIndex("UserGuid", "NormalizedName")
                    .IsUnique();

                b.ToTable("Category");
            });

        modelBuilder.Entity("database.Models.EntryModel", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<bool>("Deleted")
                    .HasColumnType("bit");

                b.Property<DateTime?>("EndTime")
                    .HasColumnType("datetime2");

                b.Property<DateTime>("RecordedTime")
                    .HasColumnType("datetime2");

                b.Property<DateTime>("StartTime")
                    .HasColumnType("datetime2");

                b.Property<Guid>("UserGuid")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("Id");

                b.ToTable("Entry");
            });

        modelBuilder.Entity("ActivityModelEntryModel", b =>
            {
                b.HasOne("database.Models.ActivityModel", null)
                    .WithMany()
                    .HasForeignKey("ActivitiesId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("database.Models.EntryModel", null)
                    .WithMany()
                    .HasForeignKey("EntryModelId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

        modelBuilder.Entity("database.Models.ActivityChangeModel", b =>
            {
                b.HasOne("database.Models.ActivityModel", "Destination")
                    .WithMany()
                    .HasForeignKey("DestinationId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.HasOne("database.Models.ActivityModel", "Source")
                    .WithMany()
                    .HasForeignKey("SourceId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.Navigation("Destination");

                b.Navigation("Source");
            });

        modelBuilder.Entity("database.Models.ActivityModel", b =>
            {
                b.HasOne("database.Models.CategoryModel", "Category")
                    .WithMany()
                    .HasForeignKey("CategoryId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Category");
            });
#pragma warning restore 612, 618
    }
}
